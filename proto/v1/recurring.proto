syntax = "proto3";

package beget.payment.v1.recurring;
import "google/api/annotations.proto";
import "payment/proto/v1/structures.proto";

service RecurringService {
    // получить текущее состояние повторяемых платежей
    rpc getInfo (GetInfoRequest) returns (GetInfoResponse) {
        option (google.api.http) = {
            get: "/v1/payment/recurring"
        };
    }

    // отключить повторяемый платеж
    rpc unbind (UnbindRequest) returns (UnbindResponse) {
        option (google.api.http) = {
            delete: "/v1/payment/recurring"
        };
    }

    // получить историю по списаниям
    rpc getHistory (GetHistoryRequest) returns (GetHistoryResponse) {
        option (google.api.http) = {
            get: "/v1/payment/recurring/history"
        };
    }
}
message GetInfoRequest {
}
message GetInfoResponse {
    // было когда-то подключено. Значит и история может быть
    bool was_used = 1;

    oneof state {
        NotBinded not_binded = 2;
        Binded binded = 3;
    }
    message NotBinded {
    }
    message Binded {
        Provider provider = 1;
        structures.RecurringPeriod period = 2;
        uint32 fail_charges = 3;
        string card = 4;
    }
}

message UnbindRequest {
}
message UnbindResponse {
    // OK
}

message GetHistoryRequest {
}
message GetHistoryResponse {
    repeated Charge charge = 1;

    message Charge {
        structures.RecurringPeriod period = 1;
        Status status = 2;
        string processed_at = 3; // W3C
        float amount = 4;
        string card = 5;

        enum Status {
            SUCCESS = 0; // Успешно
            FAIL = 1; // Произошла ошибка
        }
    }
}

enum Provider {
    YANDEX = 0;
    LIQPAY = 1;
}